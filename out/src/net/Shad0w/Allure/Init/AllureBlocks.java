package net.Shad0w.Allure.Init;

import com.mojang.datafixers.types.Type;
import net.Shad0w.Allure.Allure;
import net.Shad0w.Allure.Blocks.Buttons.MetalButtonBlock;
import net.Shad0w.Allure.Blocks.Chute.ChuteBlock;
import net.Shad0w.Allure.Blocks.Chute.ChuteBlockEntity;
import net.Shad0w.Allure.Blocks.Crate.CrateBlock;
import net.Shad0w.Allure.Blocks.Crate.CrateBlockEntity;
import net.Shad0w.Allure.Blocks.EnderWatcher.EnderWatcherBlock;
import net.Shad0w.Allure.Blocks.EnderWatcher.EnderWatcherBlockEntity;
import net.Shad0w.Allure.Blocks.FeedingTrough.FeedingTroughBlock;
import net.Shad0w.Allure.Blocks.FeedingTrough.FeedingTroughBlockEntity;
import net.Shad0w.Allure.Blocks.Gravestone.GravestoneBlock;
import net.Shad0w.Allure.Blocks.Gravestone.GravestoneBlockEntity;
import net.Shad0w.Allure.Blocks.Speleothem.SpeleothemBlock;
import net.Shad0w.Allure.Blocks.WeatherDetectorBlock.WeatherDetectorBlock;
import net.Shad0w.Allure.Blocks.WeatherDetectorBlock.WeatherDetectorBlockEntity;
import net.Shad0w.Allure.Utils.Blocks.AllurePaneBlock;
import net.Shad0w.Allure.Utils.Blocks.AllureStairsBlock;
import net.Shad0w.Allure.Utils.Blocks.CustomOre;
import net.fabricmc.fabric.api.block.FabricBlockSettings;
import net.fabricmc.fabric.api.tools.FabricToolTags;
import net.minecraft.block.Block;
import net.minecraft.block.BlockState;
import net.minecraft.block.Blocks;
import net.minecraft.block.GlassBlock;
import net.minecraft.block.Material;
import net.minecraft.block.MaterialColor;
import net.minecraft.block.PillarBlock;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.SlimeBlock;
import net.minecraft.block.StairsBlock;
import net.minecraft.block.VineBlock;
import net.minecraft.block.WallBlock;
import net.minecraft.block.AbstractBlock.Settings;
import net.minecraft.block.entity.BlockEntityType;
import net.minecraft.block.entity.BlockEntityType.Builder;
import net.minecraft.entity.EntityType;
import net.minecraft.sound.BlockSoundGroup;
import net.minecraft.util.Identifier;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.registry.Registry;
import net.minecraft.world.BlockView;

public class AllureBlocks {
   public static final CrateBlock CRATE_OAK_BLOCK = new CrateBlock();
   public static final CrateBlock CRATE_SPRUCE_BLOCK = new CrateBlock();
   public static final CrateBlock CRATE_BIRCH_BLOCK = new CrateBlock();
   public static final CrateBlock CRATE_JUNGLE_BLOCK = new CrateBlock();
   public static final CrateBlock CRATE_ACACIA_BLOCK = new CrateBlock();
   public static final CrateBlock CRATE_DARK_OAK_BLOCK = new CrateBlock();
   public static final BlockEntityType CRATE_BLOCK_ENTITY;
   public static final Block ENDER_PEARL_BLOCK;
   public static final GravestoneBlock GRAVESTONE_BLOCK;
   public static final BlockEntityType GRAVESTONE_BLOCK_ENTITY;
   public static final ChuteBlock CHUTE_BLOCK;
   public static final BlockEntityType CHUTE_BLOCK_ENTITY;
   public static final SlimeBlock RED_SLIME_BLOCK;
   public static final SlimeBlock BLUE_SLIME_BLOCK;
   public static final SlimeBlock MAGENTA_SLIME_BLOCK;
   public static final SlimeBlock YELLOW_SLIME_BLOCK;
   public static final SlimeBlock CYAN_SLIME_BLOCK;
   public static final FeedingTroughBlock FEEDING_TROUGH_BLOCK;
   public static final BlockEntityType FEEDING_TROUGH_BLOCK_ENTITY;
   public static final Block COBBLESTONE_BRICKS;
   public static final SlabBlock COBBLESTONE_BRICKS_SLAB;
   public static final StairsBlock COBBLESTONE_BRICKS_STAIRS;
   public static final WallBlock COBBLESTONE_BRICKS_WALL;
   public static final Block MOSSY_COBBLESTONE_BRICKS;
   public static final SlabBlock MOSSY_COBBLESTONE_BRICKS_SLAB;
   public static final StairsBlock MOSSY_COBBLESTONE_BRICKS_STAIRS;
   public static final WallBlock MOSSY_COBBLESTONE_BRICKS_WALL;
   public static final Block CHARCOAL_BLOCK;
   public static final Block BLAZE_LANTERN;
   public static final Block BONDED_LEATHER_BLOCK;
   public static final Block SUGAR_CANE_BLOCK;
   public static final Block BAMBOO_BLOCK;
   public static final Block CACTUS_BLOCK;
   public static final Block CHORUS_FRUIT_BLOCK;
   public static final Block STICK_BLOCK;
   public static final Block APPLE_CRATE;
   public static final Block GOLDEN_APPLE_CRATE;
   public static final Block POTATO_CRATE;
   public static final Block CARROT_CRATE;
   public static final Block BEETROOT_CRATE;
   public static final Block COCOA_BEANS_SACK;
   public static final Block BERRY_SACK;
   public static final Block GUNPOWDER_SACK;
   public static final Block ENDER_WATCHER_BLOCK;
   public static final BlockEntityType ENDER_WATCHER_BLOCK_ENTITY;
   public static final Block BIOTITE_ORE;
   public static final Block BIOTITE_BLOCK;
   public static final Block BIOTITE_PILLAR;
   public static final Block BIOTITE_STAIRS;
   public static final Block BIOTITE_SLAB;
   public static final Block BIOTITE_BRICKS;
   public static final Block SMOOTH_BIOTITE_BLOCK;
   public static final Block SMOOTH_BIOTITE_STAIRS;
   public static final Block SMOOTH_BIOTITE_SLAB;
   public static final Block CHISELED_BIOTITE_BLOCK;
   public static final Block WEATHER_DETECTOR_BLOCK;
   public static final BlockEntityType WEATHER_DETECTOR_BLOCK_ENTITY;
   public static final Block GOLDEN_BUTTON_BLOCK;
   public static final Block IRON_BUTTON_BLOCK;
   public static final Block FRAMED_GLASS;
   public static final Block FRAMED_GLASS_PANE;
   public static final Block GOLD_BARS;
   public static final Block STONE_SPELEOTHEM;
   public static final Block GRANITE_SPELEOTHEM;
   public static final Block DIORITE_SPELEOTHEM;
   public static final Block ANDESITE_SPELEOTHEM;
   public static final Block NETHERRACK_SPELEOTHEM;
   public static final Block BASALT_SPELEOTHEM;
   public static final Block ROOT_BLOCK;
   public static final Block LIT_REDSTONE_LAMP;

   private static boolean never(BlockState blockState, BlockView blockView, BlockPos blockPos, EntityType entityType) {
      return false;
   }

   public static boolean never(BlockState state, BlockView world, BlockPos pos) {
      return false;
   }

   public static void initialize() {
      if (Allure.CONFIG.crateEnabled) {
         Registry.method_10230(Registry.field_11146, new Identifier("allure", "crate_oak"), CRATE_OAK_BLOCK);
         Registry.method_10230(Registry.field_11146, new Identifier("allure", "crate_spruce"), CRATE_SPRUCE_BLOCK);
         Registry.method_10230(Registry.field_11146, new Identifier("allure", "crate_birch"), CRATE_BIRCH_BLOCK);
         Registry.method_10230(Registry.field_11146, new Identifier("allure", "crate_jungle"), CRATE_JUNGLE_BLOCK);
         Registry.method_10230(Registry.field_11146, new Identifier("allure", "crate_acacia"), CRATE_ACACIA_BLOCK);
         Registry.method_10230(Registry.field_11146, new Identifier("allure", "crate_dark_oak"), CRATE_DARK_OAK_BLOCK);
         Registry.method_10230(Registry.field_11137, CrateBlock.GUI, CRATE_BLOCK_ENTITY);
      }

      Registry.method_10230(Registry.field_11146, new Identifier("allure", "ender_pearl_block"), ENDER_PEARL_BLOCK);
      Registry.method_10230(Registry.field_11146, GravestoneBlock.ID, GRAVESTONE_BLOCK);
      Registry.method_10230(Registry.field_11137, GravestoneBlock.ID, GRAVESTONE_BLOCK_ENTITY);
      Registry.method_10230(Registry.field_11146, ChuteBlock.GUI, CHUTE_BLOCK);
      Registry.method_10230(Registry.field_11137, ChuteBlock.GUI, CHUTE_BLOCK_ENTITY);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "red_slime_block"), RED_SLIME_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "blue_slime_block"), BLUE_SLIME_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "magenta_slime_block"), MAGENTA_SLIME_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "yellow_slime_block"), YELLOW_SLIME_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "cyan_slime_block"), CYAN_SLIME_BLOCK);
      Registry.method_10230(Registry.field_11146, FeedingTroughBlock.GUI, FEEDING_TROUGH_BLOCK);
      Registry.method_10230(Registry.field_11137, FeedingTroughBlock.GUI, FEEDING_TROUGH_BLOCK_ENTITY);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "cobblestone_bricks"), COBBLESTONE_BRICKS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "cobblestone_bricks_slab"), COBBLESTONE_BRICKS_SLAB);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "cobblestone_bricks_stairs"), COBBLESTONE_BRICKS_STAIRS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "cobblestone_bricks_wall"), COBBLESTONE_BRICKS_WALL);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "mossy_cobblestone_bricks"), MOSSY_COBBLESTONE_BRICKS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "mossy_cobblestone_bricks_slab"), MOSSY_COBBLESTONE_BRICKS_SLAB);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "mossy_cobblestone_bricks_stairs"), MOSSY_COBBLESTONE_BRICKS_STAIRS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "mossy_cobblestone_bricks_wall"), MOSSY_COBBLESTONE_BRICKS_WALL);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "charcoal_block"), CHARCOAL_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "blaze_lantern"), BLAZE_LANTERN);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "bonded_leather"), BONDED_LEATHER_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "sugar_cane_block"), SUGAR_CANE_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "bamboo_block"), BAMBOO_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "cactus_block"), CACTUS_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "chorus_fruit_block"), CHORUS_FRUIT_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "stick_block"), STICK_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "apple_crate"), APPLE_CRATE);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "golden_apple_crate"), GOLDEN_APPLE_CRATE);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "potato_crate"), POTATO_CRATE);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "carrot_crate"), CARROT_CRATE);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "beetroot_crate"), BEETROOT_CRATE);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "cocoa_beans_sack"), COCOA_BEANS_SACK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "berry_sack"), BERRY_SACK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "gunpowder_sack"), GUNPOWDER_SACK);
      Registry.method_10230(Registry.field_11146, EnderWatcherBlock.ID, ENDER_WATCHER_BLOCK);
      Registry.method_10230(Registry.field_11137, EnderWatcherBlock.ID, ENDER_WATCHER_BLOCK_ENTITY);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "biotite_ore"), BIOTITE_ORE);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "biotite_block"), BIOTITE_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "biotite_bricks"), BIOTITE_BRICKS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "biotite_pillar"), BIOTITE_PILLAR);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "biotite_slab"), BIOTITE_SLAB);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "biotite_stairs"), BIOTITE_STAIRS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "smooth_biotite_block"), SMOOTH_BIOTITE_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "smooth_biotite_slab"), SMOOTH_BIOTITE_SLAB);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "smooth_biotite_stairs"), SMOOTH_BIOTITE_STAIRS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "chiseled_biotite_block"), CHISELED_BIOTITE_BLOCK);
      Registry.method_10230(Registry.field_11146, WeatherDetectorBlock.ID, WEATHER_DETECTOR_BLOCK);
      Registry.method_10230(Registry.field_11137, WeatherDetectorBlock.ID, WEATHER_DETECTOR_BLOCK_ENTITY);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "gold_button"), GOLDEN_BUTTON_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "iron_button"), IRON_BUTTON_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "framed_glass"), FRAMED_GLASS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "framed_glass_pane"), FRAMED_GLASS_PANE);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "gold_bars"), GOLD_BARS);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "stone_speleothem"), STONE_SPELEOTHEM);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "granite_speleothem"), GRANITE_SPELEOTHEM);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "andesite_speleothem"), ANDESITE_SPELEOTHEM);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "diorite_speleothem"), DIORITE_SPELEOTHEM);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "netherrack_speleothem"), NETHERRACK_SPELEOTHEM);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "basalt_speleothem"), BASALT_SPELEOTHEM);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "root"), ROOT_BLOCK);
      Registry.method_10230(Registry.field_11146, new Identifier("allure", "lit_redstone_lamp"), LIT_REDSTONE_LAMP);
   }

   static {
      CRATE_BLOCK_ENTITY = Builder.method_20528(CrateBlockEntity::new, new Block[]{CRATE_OAK_BLOCK, CRATE_SPRUCE_BLOCK, CRATE_BIRCH_BLOCK, CRATE_JUNGLE_BLOCK, CRATE_ACACIA_BLOCK, CRATE_DARK_OAK_BLOCK}).method_11034((Type)null);
      ENDER_PEARL_BLOCK = new Block(FabricBlockSettings.of(Material.field_15953, MaterialColor.field_16028).strength(5.0F, 6.0F).sounds(BlockSoundGroup.field_11533).build());
      GRAVESTONE_BLOCK = new GravestoneBlock(FabricBlockSettings.of(Material.field_15914).strength(0.2F, 1200.0F).dropsNothing().nonOpaque().build());
      GRAVESTONE_BLOCK_ENTITY = Builder.method_20528(GravestoneBlockEntity::new, new Block[]{GRAVESTONE_BLOCK}).method_11034((Type)null);
      CHUTE_BLOCK = new ChuteBlock(FabricBlockSettings.of(Material.field_15932).strength(3.0F, 4.8F).build());
      CHUTE_BLOCK_ENTITY = Builder.method_20528(ChuteBlockEntity::new, new Block[]{CHUTE_BLOCK}).method_11034((Type)null);
      RED_SLIME_BLOCK = new SlimeBlock(FabricBlockSettings.of(Material.field_15936, MaterialColor.field_16020).slipperiness(0.8F).sounds(BlockSoundGroup.field_11545).nonOpaque().build());
      BLUE_SLIME_BLOCK = new SlimeBlock(FabricBlockSettings.of(Material.field_15936, MaterialColor.field_15984).slipperiness(0.8F).sounds(BlockSoundGroup.field_11545).nonOpaque().build());
      MAGENTA_SLIME_BLOCK = new SlimeBlock(FabricBlockSettings.of(Material.field_15936, MaterialColor.field_15998).slipperiness(0.8F).sounds(BlockSoundGroup.field_11545).nonOpaque().build());
      YELLOW_SLIME_BLOCK = new SlimeBlock(FabricBlockSettings.of(Material.field_15936, MaterialColor.field_16010).slipperiness(0.8F).sounds(BlockSoundGroup.field_11545).nonOpaque().build());
      CYAN_SLIME_BLOCK = new SlimeBlock(FabricBlockSettings.of(Material.field_15936, MaterialColor.field_16026).slipperiness(0.8F).sounds(BlockSoundGroup.field_11545).nonOpaque().build());
      FEEDING_TROUGH_BLOCK = new FeedingTroughBlock(FabricBlockSettings.of(Material.field_15932).strength(0.6F, 0.6F).sounds(BlockSoundGroup.field_11547).build());
      FEEDING_TROUGH_BLOCK_ENTITY = Builder.method_20528(FeedingTroughBlockEntity::new, new Block[]{FEEDING_TROUGH_BLOCK}).method_11034((Type)null);
      COBBLESTONE_BRICKS = new Block(FabricBlockSettings.of(Material.field_15914).breakByTool(FabricToolTags.PICKAXES).strength(2.0F, 6.0F).build());
      COBBLESTONE_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copy(COBBLESTONE_BRICKS).build());
      COBBLESTONE_BRICKS_STAIRS = new AllureStairsBlock(COBBLESTONE_BRICKS.method_9564(), FabricBlockSettings.copy(COBBLESTONE_BRICKS).build());
      COBBLESTONE_BRICKS_WALL = new WallBlock(FabricBlockSettings.copy(COBBLESTONE_BRICKS).build());
      MOSSY_COBBLESTONE_BRICKS = new Block(FabricBlockSettings.copy(COBBLESTONE_BRICKS).build());
      MOSSY_COBBLESTONE_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copy(MOSSY_COBBLESTONE_BRICKS).build());
      MOSSY_COBBLESTONE_BRICKS_STAIRS = new AllureStairsBlock(MOSSY_COBBLESTONE_BRICKS.method_9564(), FabricBlockSettings.copy(MOSSY_COBBLESTONE_BRICKS).build());
      MOSSY_COBBLESTONE_BRICKS_WALL = new WallBlock(FabricBlockSettings.copy(MOSSY_COBBLESTONE_BRICKS).build());
      CHARCOAL_BLOCK = new Block(FabricBlockSettings.of(Material.field_15914, MaterialColor.field_16009).breakByTool(FabricToolTags.PICKAXES).strength(5.0F, 6.0F).build());
      BLAZE_LANTERN = new Block(FabricBlockSettings.of(Material.field_15942, MaterialColor.field_15986).breakByTool(FabricToolTags.PICKAXES).strength(0.5F, 0.5F).sounds(BlockSoundGroup.field_11537).lightLevel(15).build());
      BONDED_LEATHER_BLOCK = new Block(FabricBlockSettings.of(Material.field_15945, MaterialColor.field_16020).strength(0.5F, 0.5F).sounds(BlockSoundGroup.field_22154).build());
      SUGAR_CANE_BLOCK = new PillarBlock(FabricBlockSettings.of(Material.field_15945, MaterialColor.field_15997).strength(1.0F, 1.0F).sounds(BlockSoundGroup.field_11535).build());
      BAMBOO_BLOCK = new PillarBlock(FabricBlockSettings.of(Material.field_15945, MaterialColor.field_16013).strength(1.0F, 1.0F).sounds(BlockSoundGroup.field_11542).build());
      CACTUS_BLOCK = new PillarBlock(FabricBlockSettings.of(Material.field_15945, MaterialColor.field_16028).strength(1.0F, 1.0F).sounds(BlockSoundGroup.field_11543).build());
      CHORUS_FRUIT_BLOCK = new PillarBlock(FabricBlockSettings.of(Material.field_15945, MaterialColor.field_16014).strength(1.0F, 1.0F).sounds(BlockSoundGroup.field_11547).build());
      STICK_BLOCK = new PillarBlock(FabricBlockSettings.of(Material.field_15945, MaterialColor.field_15977).strength(1.0F, 1.0F).sounds(BlockSoundGroup.field_11547).build());
      APPLE_CRATE = new Block(FabricBlockSettings.of(Material.field_15932, MaterialColor.field_16020).strength(2.5F, 2.5F).breakByTool(FabricToolTags.AXES).sounds(BlockSoundGroup.field_11547).build());
      GOLDEN_APPLE_CRATE = new Block(FabricBlockSettings.of(Material.field_15932, MaterialColor.field_15994).strength(2.5F, 2.5F).breakByTool(FabricToolTags.AXES).sounds(BlockSoundGroup.field_11547).build());
      POTATO_CRATE = new Block(FabricBlockSettings.of(Material.field_15932, MaterialColor.field_15977).strength(2.5F, 2.5F).breakByTool(FabricToolTags.AXES).sounds(BlockSoundGroup.field_11547).build());
      CARROT_CRATE = new Block(FabricBlockSettings.of(Material.field_15932, MaterialColor.field_15987).strength(2.5F, 2.5F).breakByTool(FabricToolTags.AXES).sounds(BlockSoundGroup.field_11547).build());
      BEETROOT_CRATE = new Block(FabricBlockSettings.of(Material.field_15932, MaterialColor.field_15982).strength(2.5F, 2.5F).breakByTool(FabricToolTags.AXES).sounds(BlockSoundGroup.field_11547).build());
      COCOA_BEANS_SACK = new Block(FabricBlockSettings.of(Material.field_15931, MaterialColor.field_15992).strength(0.8F, 0.8F).build());
      BERRY_SACK = new Block(FabricBlockSettings.of(Material.field_15931, MaterialColor.field_16020).strength(0.8F, 0.8F).build());
      GUNPOWDER_SACK = new Block(FabricBlockSettings.of(Material.field_15931, MaterialColor.field_15978).strength(0.8F, 0.8F).build());
      ENDER_WATCHER_BLOCK = new EnderWatcherBlock(FabricBlockSettings.of(Material.field_15953, MaterialColor.field_16028).strength(5.0F, 6.0F).build().method_29292());
      ENDER_WATCHER_BLOCK_ENTITY = Builder.method_20528(EnderWatcherBlockEntity::new, new Block[]{ENDER_WATCHER_BLOCK}).method_11034((Type)null);
      BIOTITE_ORE = new CustomOre(FabricBlockSettings.copy(Blocks.field_10471).strength(3.2F, 15.0F).build().method_29292(), 2, 5);
      BIOTITE_BLOCK = new Block(FabricBlockSettings.copy(Blocks.field_10471).strength(3.2F, 15.0F).build().method_29292());
      BIOTITE_PILLAR = new PillarBlock(Settings.method_9630(BIOTITE_BLOCK));
      BIOTITE_STAIRS = new AllureStairsBlock(BIOTITE_BLOCK.method_9564(), Settings.method_9630(BIOTITE_BLOCK));
      BIOTITE_SLAB = new SlabBlock(Settings.method_9630(BIOTITE_BLOCK));
      BIOTITE_BRICKS = new Block(Settings.method_9630(BIOTITE_BLOCK));
      SMOOTH_BIOTITE_BLOCK = new Block(Settings.method_9630(BIOTITE_BLOCK));
      SMOOTH_BIOTITE_STAIRS = new AllureStairsBlock(SMOOTH_BIOTITE_BLOCK.method_9564(), Settings.method_9630(SMOOTH_BIOTITE_BLOCK));
      SMOOTH_BIOTITE_SLAB = new SlabBlock(Settings.method_9630(SMOOTH_BIOTITE_BLOCK));
      CHISELED_BIOTITE_BLOCK = new PillarBlock(Settings.method_9630(BIOTITE_BLOCK));
      WEATHER_DETECTOR_BLOCK = new WeatherDetectorBlock(FabricBlockSettings.of(Material.field_15914, MaterialColor.field_15998).strength(0.2F, 0.2F).build());
      WEATHER_DETECTOR_BLOCK_ENTITY = Builder.method_20528(WeatherDetectorBlockEntity::new, new Block[]{WEATHER_DETECTOR_BLOCK}).method_11034((Type)null);
      GOLDEN_BUTTON_BLOCK = new MetalButtonBlock(true, FabricBlockSettings.of(Material.field_15924).strength(0.2F, 0.2F).build());
      IRON_BUTTON_BLOCK = new MetalButtonBlock(false, FabricBlockSettings.of(Material.field_15924).strength(0.2F, 0.2F).build());
      FRAMED_GLASS = new GlassBlock(FabricBlockSettings.of(Material.field_15942).strength(3.0F, 10.0F).breakByTool(net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags.PICKAXES).build().method_29292().method_22488().method_26235(AllureBlocks::never).method_26236(AllureBlocks::never).method_26243(AllureBlocks::never).method_26245(AllureBlocks::never));
      FRAMED_GLASS_PANE = new AllurePaneBlock(FabricBlockSettings.of(Material.field_15942).strength(3.0F, 10.0F).sounds(BlockSoundGroup.field_11537).build().method_22488());
      GOLD_BARS = new AllurePaneBlock(FabricBlockSettings.copy(Blocks.field_10576).build());
      STONE_SPELEOTHEM = new SpeleothemBlock(FabricBlockSettings.copy(Blocks.field_10340).strength(1.5F, 1.5F).build().method_26236(AllureBlocks::never));
      GRANITE_SPELEOTHEM = new SpeleothemBlock(FabricBlockSettings.copy(Blocks.field_10474).strength(1.5F, 1.5F).build().method_26236(AllureBlocks::never));
      DIORITE_SPELEOTHEM = new SpeleothemBlock(FabricBlockSettings.copy(Blocks.field_10508).strength(1.5F, 1.5F).build().method_26236(AllureBlocks::never));
      ANDESITE_SPELEOTHEM = new SpeleothemBlock(FabricBlockSettings.copy(Blocks.field_10115).strength(1.5F, 1.5F).build().method_26236(AllureBlocks::never));
      NETHERRACK_SPELEOTHEM = new SpeleothemBlock(FabricBlockSettings.copy(Blocks.field_10515).strength(0.4F, 0.4F).build().method_26236(AllureBlocks::never));
      BASALT_SPELEOTHEM = new SpeleothemBlock(FabricBlockSettings.copy(Blocks.field_22091).strength(1.5F, 1.5F).build().method_26236(AllureBlocks::never));
      ROOT_BLOCK = new VineBlock(FabricBlockSettings.copy(Blocks.field_10597).noCollision().ticksRandomly().strength(0.2F, 0.2F).build());
      LIT_REDSTONE_LAMP = new Block(FabricBlockSettings.copy(Blocks.field_10524).lightLevel(15).build());
   }
}
